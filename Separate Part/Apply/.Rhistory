library(shinydashboard)
library(shiny)
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
" This file is the main for Apply function use dashboard"
# Library
library(shinydashboard)
library(shiny)
# UI
ui <- dashboardPage(
dashboardHeader("Apply"),
# Side bar
dashboardSidebar(
sidebarMenu(
menuItem("Instruction", tabName = "Instruction", icon = icon("info")),
menuItem("Game", tabName="Game", icon = icon("gamepad")),
)
),
dashboardBody(
# instruction
tabItem(tabName = "Instruction",
h2("Welcome! Here is the instruction for Apply part"),
tags$h4("Instructions"),
tags$p("Instruction text")
),
# apply
tabItem(tabName = "Game",
h2("Welcome! Here is Apply game")
)
)
)
server <- function(input, output) { }
shinyApp(ui, server)
runApp('main.R')
runApp('main.R')
# Library
library(shinydashboard)
library(shiny)
# UI
ui <- dashboardPage(
dashboardHeader("Apply"),
# Side bar
dashboardSidebar(
sidebarMenu(
menuItem("Instruction", tabName = "Instruction", icon = icon("info")),
menuItem("Game", tabName="Game", icon = icon("gamepad")),
)
),
dashboardBody(
# instruction
tabItem(tabName = "Instruction",
h2("Welcome! Here is the instruction for Apply part"),
tags$h4("Instructions"),
tags$p("Instruction text")
),
# apply
tabItem(tabName = "Game",
h2("Welcome! Here is Apply game")
)
)
)
server <- function(input, output) { }
runApp('main.R')
runApp('main.R')
runApp('main.R')
ui <- dashboardPage(
dashboardHeader(title = "A Two-Player Game"),
dashboardSidebar(
sidebarMenu(
#https://fontawesome.com/icons?d=gallery
menuItem("Welcome", tabName = "welcome", icon = icon("door-open")),
menuItem("Game", tabName = "game", icon = icon("chess-board")),
menuItem("Score",tabName = "score",icon=icon("clipboard-list"))
),
selectInput("playercolor", "Select which side to play on:",
c("Red"=1,"Blue"=2))
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "welcome",
h2("Welcome, instructions, and login go here"),
actionButton("register", "Register"),
actionButton("login", "Login"),
tags$h4("Logged in as:"),
htmlOutput("loggedInAs"),
tags$br(),
selectInput("gamevariantid", "Select the Game Variant to Play:",
getGameVariantList()),
tags$h4("Instructions"),
tags$p("There are no rules for this game yet. We are simply demonstrating the elements of a two-player game. ")
),
# Second tab content
tabItem(tabName = "game",
h2("Make Your Own Rules"),
fluidRow(
box(
title = "A Very Simple Board Game",width=12,
htmlOutput("playercolorchoice"),
uiOutput("moreControls"),
# the trick here is to make the gameboard image 'position:absolute;z-order:0';
# Then, to superimpose images, style them to be 'position:relative;z-order:999'
img(src='FantasyMap.jpg',style="position:absolute;z-order:0",width="415px",height="400px"),
imageOutput("cell11",height="100px",width="100px",click="click11",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell12",height="100px",width="100px",click="click12",inline=TRUE),  # height and width are for the containing div, not the image itself
imageOutput("cell13",height="100px",width="100px",click="click13",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell14",height="100px",width="100px",click="click14",inline=TRUE),  # height and width are for the containing div, not the image itself
tags$br(),
imageOutput("cell21",height="100px",width="100px",click="click21",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell22",height="100px",width="100px",click="click22",inline=TRUE),  # height and width are for the containing div, not the image itself
imageOutput("cell23",height="100px",width="100px",click="click23",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell24",height="100px",width="100px",click="click24",inline=TRUE),  # height and width are for the containing div, not the image itself
tags$br(),
imageOutput("cell31",height="100px",width="100px",click="click31",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell32",height="100px",width="100px",click="click32",inline=TRUE),  # height and width are for the containing div, not the image itself
imageOutput("cell33",height="100px",width="100px",click="click33",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell34",height="100px",width="100px",click="click34",inline=TRUE),  # height and width are for the containing div, not the image itself
tags$br(),
imageOutput("cell41",height="100px",width="100px",click="click41",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell42",height="100px",width="100px",click="click42",inline=TRUE),  # height and width are for the containing div, not the image itself
imageOutput("cell43",height="100px",width="100px",click="click43",inline=TRUE), # height and width are for the containing div, not the image itself
imageOutput("cell44",height="100px",width="100px",click="click44",inline=TRUE),  # height and width are for the containing div, not the image itself
tags$br(),
p("ESD Fantasy Map and Game Pieces by Tan Yi Lin")
)
)
),
tabItem(tabName = "score",
h2("Pulish your score and see others scores"),
fluidRow(
box(
title = "A Very Simple Board Game",width=12,
actionButton("playgame", "Play the Game"),
htmlOutput("score"),
uiOutput("moreControls2")
)
)
)
)
)
)
server <- function(input, output) { }
shinyApp(ui, server)
runApp('main.R')
runApp('main.R')
ddd
runApp('main.R')
runif(2,4,4)
runif(2,4,4)
runif(2,4,4)
runif(2,1,4)
sample(1:4,1)
sample(1:4,1)
sample(1:4,1)
sample(1:4,1)
runApp('main.R')
"Detail : 4x4 whack a mole game "
sample(1:4,1)
a <- (1,2)
a <- c(1,2)
a[1]
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
w
w
runApp('main.R')
runApp('main.R')
ssss
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
as.double(1)
as.integer(0.1)
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
a <- rep(0,10)
a[1]
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
?img
runApp('main.R')
shiny::runApp()
